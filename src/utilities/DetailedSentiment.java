/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package utilities;

import org.neo4j.driver.v1.Record;
import org.neo4j.driver.v1.Session;
import org.neo4j.driver.v1.StatementResult;


import java.math.BigDecimal;
import java.math.RoundingMode;

import stream_data.GraphDBManager;
/**
 *
 * @author daniele
 */
public class DetailedSentiment extends javax.swing.JFrame {

    static GraphDBManager gdbm;
    
    /**
     * Creates new form DetailedSentiment
     */
    public DetailedSentiment() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        titleLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        locationToggleButton = new javax.swing.JToggleButton();
        hashtagToggleButton = new javax.swing.JToggleButton();
        mentionsToggleButton = new javax.swing.JToggleButton();
        locationTextField = new javax.swing.JTextField();
        hashtagTextField = new javax.swing.JTextField();
        userTextField = new javax.swing.JTextField();
        getDataButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(500, 200));

        titleLabel.setFont(new java.awt.Font("Calibri", 1, 36)); // NOI18N
        titleLabel.setForeground(new java.awt.Color(153, 0, 0));
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("Sentiment Analysis");

        jTable1.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Sentiment", "Value"
            }
        ));
        jTable1.setRowHeight(50);
        jScrollPane1.setViewportView(jTable1);

        locationToggleButton.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        locationToggleButton.setText("Geolocalizzazione");
        locationToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                locationToggleButtonActionPerformed(evt);
            }
        });

        hashtagToggleButton.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        hashtagToggleButton.setText("Hashtag");
        hashtagToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hashtagToggleButtonActionPerformed(evt);
            }
        });

        mentionsToggleButton.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        mentionsToggleButton.setText("Utente menzionato");
        mentionsToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mentionsToggleButtonActionPerformed(evt);
            }
        });

        locationTextField.setEditable(false);
        locationTextField.setText("Inserisci una località...");
        locationTextField.setEnabled(false);

        hashtagTextField.setEditable(false);
        hashtagTextField.setText("Inserisci un hashtag...");
        hashtagTextField.setEnabled(false);

        userTextField.setEditable(false);
        userTextField.setText("Inserisci il nome di un utente...");
        userTextField.setEnabled(false);

        getDataButton.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        getDataButton.setText("Carica risultati");
        getDataButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getDataButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(locationTextField)
                            .addComponent(locationToggleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(68, 68, 68)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(hashtagTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(hashtagToggleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(mentionsToggleButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(userTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(177, 177, 177)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(84, 84, 84)
                                .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 650, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(220, 220, 220)
                .addComponent(getDataButton, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(74, 74, 74)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(73, 73, 73)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(locationToggleButton, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
                    .addComponent(hashtagToggleButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(mentionsToggleButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(locationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hashtagTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(getDataButton, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>                        

    private void locationToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                     
        if(locationToggleButton.isSelected()){
            locationTextField.setEditable(true);
            locationTextField.setEnabled(true);
            locationTextField.setText("");
            locationTextField.grabFocus();
            unToggleHashtag();
            unToggleMentions();
         }
        else{
            unToggleLocation();
        }
            
    }                                                    

    
    public static double round(double value, int places) {
        if (places < 0) throw new IllegalArgumentException();

        BigDecimal bd = new BigDecimal(value);
        bd = bd.setScale(places, RoundingMode.HALF_UP);
        return bd.doubleValue();
    }
    
    
    private void hashtagToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                    
        if(hashtagToggleButton.isSelected()){
            hashtagTextField.setEditable(true);
            hashtagTextField.setEnabled(true);
            hashtagTextField.setText("");
            hashtagTextField.grabFocus();
            unToggleMentions();
            unToggleLocation();
         }
        else{
            unToggleHashtag();
        }
    }                                                   

    private void mentionsToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                     
        if(mentionsToggleButton.isSelected()){
            userTextField.setEditable(true);
            userTextField.setEnabled(true);
            userTextField.setText("");
            userTextField.grabFocus();
            unToggleHashtag();
            unToggleLocation();
         }
        else{
            unToggleMentions();
        }
    }                                                    

    private void getQueryResult(StatementResult sr){
    	double positive = 0, negative = 0; int neutral = 0;
    	
    	 while(sr.hasNext()){
             Record r = sr.next();
             if(r.get(0).asString().equals("positive"))
                 positive = r.get(1).asInt();
             if(r.get(0).asString().equals("negative"))
             	negative = r.get(1).asInt();
             if(r.get(0).asString().equals("neutral"))
             	neutral = r.get(1).asInt();
          }
    	
    	
    	double somma = positive+negative;
        positive = 100-(negative/somma*100);
        negative = 100-positive;
        positive = round(positive, 2);
        negative = round(negative, 2);
        fillTable(positive, negative, neutral);
    	
    }
    
    private void getDataButtonActionPerformed(java.awt.event.ActionEvent evt) {                                              
        clearTable();
    	if(hashtagToggleButton.isSelected())
    		titleLabel.setText("Sentiment analysis per #"+hashtagTextField.getText());
    	if(mentionsToggleButton.isSelected())
    		titleLabel.setText("Sentiment analysis per  @"+userTextField.getText());
    	if(locationToggleButton.isSelected())
    		titleLabel.setText("Sentiment analysis per "+locationTextField.getText());
        Session session = gdbm.getSession();
        
        if(locationToggleButton.isSelected()){
            String query = "MATCH (t:Tweet) WHERE t.location='"+locationTextField.getText()+"' RETURN t.sentiment, count(t)";
            StatementResult sr = session.run(query);
            getQueryResult(sr);
         }
        if(hashtagToggleButton.isSelected()){
        	String query = "MATCH (t:Tweet)-->(h:Hashtag) WHERE h.tag='"+hashtagTextField.getText()+"' RETURN t.sentiment, count(t)";
            StatementResult sr = session.run(query);
            getQueryResult(sr);
        }
        if(mentionsToggleButton.isSelected()){
        	String query = "MATCH (t:Tweet)-->(u:User) WHERE u.screen_name='"+userTextField.getText()+"' RETURN t.sentiment, count(t)";
            StatementResult sr = session.run(query);
            getQueryResult(sr);
        }
    }                                             

  private void unToggleHashtag(){
        hashtagTextField.setEditable(false);
        hashtagTextField.setEnabled(false);
        hashtagTextField.setText("Inserisci un hashtag...");
        hashtagToggleButton.setSelected(false);
    }
    
    private void unToggleLocation(){
	    locationTextField.setEditable(false);
        locationTextField.setEnabled(false);
        locationTextField.setText("Inserisci una località...");
        locationToggleButton.setSelected(false);
    }
    
    private void unToggleMentions(){
        userTextField.setEditable(false);
        userTextField.setEnabled(false);
        userTextField.setText("Inserisci il nome di un utente...");
        mentionsToggleButton.setSelected(false);
    }
    
    
    
    private void fillTable(double positive, double negative, int neutral){
        jTable1.setValueAt("positive", 0, 0);
        jTable1.setValueAt("negative", 1, 0);
        jTable1.setValueAt("neutral", 2, 0);
        jTable1.setValueAt(positive+" %", 0, 1);
        jTable1.setValueAt(negative+" %", 1, 1);
        jTable1.setValueAt(neutral+" tweets", 2, 1);
    }
    
   private void clearTable(){
        for(int i = 0;i<jTable1.getRowCount();i++)
            for(int j = 0;j<2;j++)
                jTable1.setValueAt("", i, j);
    }
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DetailedSentiment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DetailedSentiment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DetailedSentiment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DetailedSentiment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        gdbm = new GraphDBManager();
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DetailedSentiment().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton getDataButton;
    private javax.swing.JTextField hashtagTextField;
    private javax.swing.JToggleButton hashtagToggleButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField locationTextField;
    private javax.swing.JToggleButton locationToggleButton;
    private javax.swing.JToggleButton mentionsToggleButton;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JTextField userTextField;
    // End of variables declaration                   
}
