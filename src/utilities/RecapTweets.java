package utilities;

import java.awt.Color;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

import org.neo4j.driver.v1.Record;
import org.neo4j.driver.v1.Session;
import org.neo4j.driver.v1.StatementResult;
import org.neo4j.driver.v1.types.Node;
import stream_data.GraphDBManager;
import javax.swing.JOptionPane;




/**
 *
 * @author daniele
 */
public class RecapTweets extends javax.swing.JFrame {

    /**
	 * 
	 */
    private static final long serialVersionUID = 1L;
  
    private static Session session;
    private static String[] topicsArray;
    private static String startDate;
    private static String startTime;
    private static String endDate;
    private static String endTime;
    private static int totalTweets;
    private static int countButton2;
    

    
    /**
     * Creates new form NewJFrame
     */
    public RecapTweets() {
        initComponents();
        jLabel12.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jToggleButton1 = new javax.swing.JToggleButton();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jToggleButton2 = new javax.swing.JToggleButton();
        dateTimePicker1 = new com.github.lgooddatepicker.components.DateTimePicker();
        dateTimePicker2 = new com.github.lgooddatepicker.components.DateTimePicker();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Twitter Analytics");

        jButton1.setBackground(new java.awt.Color(0, 204, 204));
        jButton1.setFont(new java.awt.Font("Calibri", 3, 18)); // NOI18N
        jButton1.setText("Aggiorna");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jList1.setModel(new javax.swing.AbstractListModel<String>() {

            private static final long serialVersionUID = 1L;
            public int getSize() { return 0; }
            public String getElementAt(int i) { return ""; }
        });
        jList1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jScrollPane1.setViewportView(jList1);

        jTextField1.setEditable(false);
        jTextField1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jTextField1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jTextField2.setEditable(false);
        jTextField2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel3.setText("tramite retweet");

        jTextField3.setEditable(false);
        jTextField3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel4.setText("tramite menzione");

        jTextField4.setEditable(false);
        jTextField4.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel5.setText("tramite risposta");

        jLabel6.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel6.setText("Scegli un argomento:");

        jLabel7.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        jLabel7.setText("Numero di tweet raccolti");

        jLabel9.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        jLabel9.setText("Utenti coinvolti");

        jLabel1.setFont(new java.awt.Font("Calibri", 1, 29)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 51, 51));
        jLabel1.setText("Twitter Analytics");

        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\daniele\\Desktop\\Tesi\\Eseguibili\\config\\Ask Question_3.png")); // NOI18N

        jLabel8.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        jLabel8.setText("Utente pi√π menzionato: ");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel10.setText("Nome_utente");

        jLabel11.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        jLabel11.setText("Indirizzo_utente");

        jLabel12.setIcon(new javax.swing.ImageIcon("C:\\Users\\daniele\\Desktop\\Tesi\\Eseguibili\\config\\rsz_verified.png")); // NOI18N
        jLabel12.setToolTipText("");

        jLabel13.setFont(new java.awt.Font("Calibri", 0, 17)); // NOI18N
        jLabel13.setText("Descrizione_utente");

        jLabel14.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel14.setText("Luogo_utente");

        jLabel15.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 0, 0));
        jLabel15.setText("x");

        jLabel16.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        jLabel16.setText("menzioni");

        jToggleButton1.setFont(new java.awt.Font("Calibri", 0, 13)); // NOI18N
        jToggleButton1.setText("Filtro cronologico");
        jToggleButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        jLabel17.setIcon(new javax.swing.ImageIcon("C:\\Users\\daniele\\Desktop\\Tesi\\Eseguibili\\config\\rsz_149059.png")); // NOI18N
        jLabel17.setToolTipText("");

        jLabel18.setIcon(new javax.swing.ImageIcon("C:\\Users\\daniele\\Desktop\\Tesi\\Eseguibili\\config\\rsz_icon.png")); // NOI18N
        jLabel18.setToolTipText("");

        jButton2.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jButton2.setText("Carica argomenti");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jToggleButton2.setFont(new java.awt.Font("Calibri", 3, 18)); // NOI18N
        jToggleButton2.setText("Aggiornamento Live");
        jToggleButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton2ActionPerformed(evt);
            }
        });

        dateTimePicker1.setEnabled(false);

        dateTimePicker2.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(295, 295, 295)
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(jLabel18))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel17))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel12)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(29, 29, 29)
                        .addComponent(jLabel15)
                        .addGap(46, 46, 46)
                        .addComponent(jLabel16))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dateTimePicker2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jToggleButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(dateTimePicker1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jTextField3, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel5)))
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jToggleButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(58, 58, 58))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 1096, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel16)
                            .addComponent(jLabel15))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel12))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel18)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel17))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel11)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel14))))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel7))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(12, 12, 12)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel4))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel5)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(47, 47, 47)
                                        .addComponent(jToggleButton1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(dateTimePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dateTimePicker2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(21, 21, 21)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jToggleButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)))
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );

        pack();
    }// </editor-fold>                        

     private String convertTimePickerFormat(String input){
    	int hour = Integer.parseInt(input.substring(0, input.length()-3));
    	String sHour = "";
    	if(hour<10)
    		sHour+="0"+hour;
    	else
    		sHour=String.valueOf(hour);
    	String sMin = "";
    	int min = Integer.parseInt(input.substring(input.length()-2, input.length()));
    	if(min<10)
    		sMin+="0"+min;
    	else
    		sMin=String.valueOf(min);
    	String output = sHour+":"+sMin+":00.000";
    	return output;
    }
    
    private String convertDatePickerFormat(String input){
    	input = input.replaceAll(" ", "-");
    	String [] split = input.split("-");
    	int day = Integer.parseInt(split[0]);
    	String sDay = "";
    	if(day<10)
    		sDay+="0"+day;
    	else
    		sDay=String.valueOf(day);
    	String sMon = checkMonth(split[1]);
    	String sYear = split[2];
    	return sYear+"-"+sMon+"-"+sDay;
    }
    
    private String checkMonth(String input){
    	if(input.startsWith("gen"))
    		return "01";
    	if(input.startsWith("feb"))
    		return "02";
    	if(input.startsWith("mar"))
    		return "03";
    	if(input.startsWith("apr"))
    		return "04";
    	if(input.startsWith("mag"))
    		return "05";
    	if(input.startsWith("giu"))
    		return "06";
    	if(input.startsWith("lug"))
    		return "07";
    	if(input.startsWith("ago"))
    		return "08";
    	if(input.startsWith("set"))
    		return "09";
    	if(input.startsWith("ott"))
    		return "10";
    	if(input.startsWith("nov"))
    		return "11";
    	if(input.startsWith("dic"))
    		return "12";
    	return null;
    	
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        if(countButton2==0){
    		JOptionPane.showMessageDialog(null, "Nessun tweet trovato per l'argomento e le date selezionate.", "Error", JOptionPane.ERROR_MESSAGE);
       		return;
    	}
        jLabel12.setVisible(false);
    	String topic = jList1.getSelectedValue();
    	String query = "MATCH (t:Tweet)-->(t2:Topic) where t2.name='"+topic+"' ";
    	String startDateTime = "";
    	String endDateTime = "";
    	if(dateTimePicker1.isEnabled() && dateTimePicker2.isEnabled()){
    			startDate = convertDatePickerFormat(dateTimePicker1.getDatePicker().getText());
	    		startTime = convertTimePickerFormat(dateTimePicker1.getTimePicker().getText());
	    		startDateTime = startDate+" "+startTime;
	    		endDate = convertDatePickerFormat(dateTimePicker2.getDatePicker().getText());
	    		endTime = convertTimePickerFormat(dateTimePicker2.getTimePicker().getText());
	    		endDateTime = endDate+" "+endTime;
	    		
	    		query += "and t.created_at>'"+startDateTime+"' ";
	    		query += "and t.created_at<'"+endDateTime+"' ";
    		}
    		
    	
    	query += "return count(t)";
    	StatementResult sr = session.run(query);
    	Record r = null;
    	if(sr.hasNext())
    		r = sr.next();
    	totalTweets = r.get(0).asInt();
    	
    	if(totalTweets==0){
   		 JOptionPane.showMessageDialog(null, "Nessun tweet trovato per l'argomento e le date selezionate.", "Error", JOptionPane.ERROR_MESSAGE);
   		return;
   	}
        jTextField1.setText(Integer.toString(r.get(0).asInt()));
        
        query = "match (n:Topic)<--(t:Tweet)-[r:RETWEETS]->() where n.name='"+topic+"' ";
        if(startDateTime.length()>0){
        	query += "and t.created_at>'"+startDateTime+"' ";
    		query += "and t.created_at<'"+endDateTime+"' ";
        }
        query += " return count(r)";
        sr = session.run(query);
        if(sr.hasNext())
    		r = sr.next();
        jTextField2.setText(Integer.toString(r.get(0).asInt()));
        
        query = "match (n:Topic)<--(a:Tweet)<-[r:REPLIES_TO]-(t:Tweet) where n.name='"+topic+"' ";
        if(startDateTime.length()>0){
        	query += "and t.created_at>'"+startDateTime+"' ";
    		query += "and t.created_at<'"+endDateTime+"' ";
        }
        query += " return count(r)";
		sr = session.run(query);
		if(sr.hasNext())
    		r = sr.next();
        jTextField3.setText(Integer.toString(r.get(0).asInt()));
        
        query = "match (n:Topic)<--(t:Tweet)-[r:MENTIONS]->(:User) where n.name='"+topic+"' ";
        if(startDateTime.length()>0){
        	query += "and t.created_at>'"+startDateTime+"' ";
    		query += "and t.created_at<'"+endDateTime+"' ";
        }
        query += " return count(r)";
		sr = session.run(query);
		if(sr.hasNext())
    		r = sr.next();
        jTextField4.setText(Integer.toString(r.get(0).asInt()));
        
       
        query = "MATCH (t:Tweet)-[r:MENTIONS]->(u:User), (t)-->(tv:Topic{name:'"+topic+"'}) WHERE u.name<>'null' ";
        if(startDateTime.length()>0){
        	query += "and t.created_at>'"+startDateTime+"' ";
    		query += "and t.created_at<'"+endDateTime+"' ";
        }
        query += " RETURN u, count(r) as mentions ORDER BY COUNT(r) DESC LIMIT 1";
        sr = session.run(query);
        if(sr.hasNext())
    		r = sr.next();
    	Node n = r.get("u").asNode();
    	int mentions = r.get("mentions").asInt();
    	
        try { 
            jLabel2.setIcon(new javax.swing.ImageIcon(new URL(n.get("profileImage").asString())));
        } catch (MalformedURLException ex) {
            Logger.getLogger(RecapTweets.class.getName()).log(Level.SEVERE, null, ex);
        }
    	 
    	jLabel10.setText(n.get("name").asString());
    	jLabel11.setText("@"+n.get("screen_name").asString());
        if(n.get("verified").asBoolean())
    		jLabel12.setVisible(true);
    	else
    		jLabel12.setVisible(false);
        jLabel13.setText(n.get("description").asString());
    	jLabel14.setText(n.get("location").asString());
        jLabel15.setText(String.valueOf(mentions));

    }                                        

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {                                            
       
    }                                           

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {                                            
        
    }                                           

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                               
        if(dateTimePicker1.isEnabled()){
    		dateTimePicker1.setEnabled(false);
    		dateTimePicker2.setEnabled(false);
    	}
    	else{
    		dateTimePicker1.setEnabled(true);
    		dateTimePicker2.setEnabled(true);
    	}
    	
    }                                              

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                         
            	countButton2++;
        GraphDBManager gdbm = new GraphDBManager();
    	session = gdbm.getSession();
    	String query = "match (n:Topic) return n.name";
    	StatementResult sr = session.run(query);
    	List<String> topics = new ArrayList<>();
    	while(sr.hasNext()){
    		Record r = sr.next();
    		topics.add(r.get(0).asString());
    	}
    	topicsArray = topics.toArray(new String[0]);
    	
    	jList1.setModel(new javax.swing.AbstractListModel<String>() {
            /**
			 * 
			 */
			private static final long serialVersionUID = 1L;
			public int getSize() { return topicsArray.length; }
            public String getElementAt(int i) { return topicsArray[i]; }
        });
    	jList1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jScrollPane1.setViewportView(jList1);
    }                                        

    private void jToggleButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                               
                                                    
         if(jToggleButton2.isSelected()){
        jToggleButton2.setBackground(Color.red);
           new Thread(new Runnable(){

           public void run(){
                   long start = 0L;
                   do{
                	   	while(System.currentTimeMillis()-start>1500){
	                	   	start = System.currentTimeMillis();
	                        jButton1ActionPerformed(evt);
                	   	}
                         
                    }while(jToggleButton2.isSelected());
           }
           }).start();
        }
        else
        	jToggleButton2.setBackground(Color.LIGHT_GRAY);
    
        
    }                                              

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {                                            
        
    }                                           

    /**
     * @param args the command line arguments
     */
  public static void main(String args[]) {
      
    	totalTweets = 0;
    	
    	
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RecapTweets.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            private RecapTweets frame;

			public void run() {
                
                frame = new RecapTweets();
                frame.setVisible(true);
                frame.setLocation(400, 100);
            }
        });
    }

    // Variables declaration - do not modify                     
    private com.github.lgooddatepicker.components.DateTimePicker dateTimePicker1;
    private com.github.lgooddatepicker.components.DateTimePicker dateTimePicker2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JToggleButton jToggleButton2;
    // End of variables declaration                   
}
